// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0

package db

import (
	"fmt"
)

type BagsStatus string

const (
	BagsStatusCreated  BagsStatus = "created"
	BagsStatusUnloaded BagsStatus = "unloaded"
	BagsStatusLoaded   BagsStatus = "loaded"
)

func (e *BagsStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = BagsStatus(s)
	case string:
		*e = BagsStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for BagsStatus: %T", src)
	}
	return nil
}

type PackagesStatus string

const (
	PackagesStatusCreated     PackagesStatus = "created"
	PackagesStatusUnloaded    PackagesStatus = "unloaded"
	PackagesStatusLoadedToBag PackagesStatus = "loaded_to_bag"
	PackagesStatusLoaded      PackagesStatus = "loaded"
)

func (e *PackagesStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = PackagesStatus(s)
	case string:
		*e = PackagesStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for PackagesStatus: %T", src)
	}
	return nil
}

type Bag struct {
	Barcode    string     `json:"barcode"`
	BagStatus  BagsStatus `json:"bag_status"`
	DeliveryID int32      `json:"delivery_id"`
}

type BagVehicle struct {
	VehiclePlate string `json:"vehicle_plate"`
	BagBarcode   string `json:"bag_barcode"`
}

type DeliveryPoint struct {
	ID   int32  `json:"id"`
	Name string `json:"name"`
}

type Package struct {
	Barcode       string         `json:"barcode"`
	PackageStatus PackagesStatus `json:"package_status"`
	PackageWeight int32          `json:"package_weight"`
	DeliveryID    int32          `json:"delivery_id"`
}

type PackageBag struct {
	BagBarcode     string `json:"bag_barcode"`
	PackageBarcode string `json:"package_barcode"`
}

type PackageVehicle struct {
	VehiclePlate   string `json:"vehicle_plate"`
	PackageBarcode string `json:"package_barcode"`
}

type Vehicle struct {
	Plate string `json:"plate"`
}
